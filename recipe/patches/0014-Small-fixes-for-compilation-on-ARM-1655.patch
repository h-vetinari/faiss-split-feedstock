From efb92f6378b4da23f3f231a78606e3dc601d5271 Mon Sep 17 00:00:00 2001
From: Matthijs Douze <matthijs@fb.com>
Date: Fri, 29 Jan 2021 10:05:07 -0800
Subject: [PATCH 14/19] Small fixes for compilation on ARM (#1655)

Summary:
This PR fixes a few small issues with compilation on ARM.
It has been tested on an AWS c6g.8xlarge machine with Ubuntu 18.04.5 LTS.
Compilation instructions are here: https://github.com/facebookresearch/faiss/wiki/Installing-Faiss#compiling-faiss-on-arm

Pull Request resolved: https://github.com/facebookresearch/faiss/pull/1655

Reviewed By: wickedfoo

Differential Revision: D26145921

Pulled By: mdouze

fbshipit-source-id: 007e57a610f489885e78ba22bc82605d67661c44
---
 faiss/utils/distances_simd.cpp | 5 +++++
 tests/test_meta_index.py       | 7 +++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/faiss/utils/distances_simd.cpp b/faiss/utils/distances_simd.cpp
index 7eefe73c..c154ffd7 100644
--- a/faiss/utils/distances_simd.cpp
+++ b/faiss/utils/distances_simd.cpp
@@ -669,6 +669,11 @@ float fvec_Linf (const float * x, const float * y, size_t d)
     return fvec_Linf_ref (x, y, d);
 }
 
+void fvec_inner_products_ny (float * dis, const float * x,
+                        const float * y, size_t d, size_t ny) {
+    fvec_inner_products_ny_ref (dis, x, y, d, ny);
+}
+
 
 #else
 // scalar implementation
diff --git a/tests/test_meta_index.py b/tests/test_meta_index.py
index 0b72f20d..3edd4eba 100644
--- a/tests/test_meta_index.py
+++ b/tests/test_meta_index.py
@@ -213,7 +213,6 @@ class Merge(unittest.TestCase):
             id_list = gen.permutation(nb * 7)[:nb].astype('int64')
             index.add_with_ids(xb, id_list)
 
-
         print('ref search ntotal=%d' % index.ntotal)
         Dref, Iref = index.search(xq, k)
 
@@ -242,13 +241,17 @@ class Merge(unittest.TestCase):
         D, I = index.search(xq, k)
 
         # make sure results are in the same order with even ones removed
+        ndiff = 0
         for i in range(nq):
             j2 = 0
             for j in range(k):
                 if Iref[i, j] % 2 != 0:
-                    assert I[i, j2] == Iref[i, j]
+                    if I[i, j2] != Iref[i, j]:
+                        ndiff += 1
                     assert abs(D[i, j2] - Dref[i, j]) < 1e-5
                     j2 += 1
+        # draws are ordered arbitrarily
+        assert ndiff < 5
 
     def test_remove(self):
         self.do_test_remove(1)
-- 
2.29.2.windows.3

